<header>
    <div class="flex items-center justify-between">
        <h2 class="text-xl font-bold">Yoginder Kumar</h2>
        <nav id="nav" class="flex gap-8 bg-dark-100 py-3 px-6 rounded-2xl items-center relative">
            <!-- Background slider for transition -->
            <div id="slider" class="absolute h-9 bg-white transition-all duration-300 ease-in-out rounded-lg"></div>

            <a href="/#" class="nav-item relative z-10">
                <h4 class="px-2 cursor-pointer py-1 font-bold text-white">Home</h4>
            </a>
            <a href="/#about" class="nav-item relative z-10">
                <h4 class="px-2 cursor-pointer py-1 font-bold text-white">About</h4>
            </a>
            <a href="/#experience" class="nav-item relative z-10">
                <h4 class="px-2 cursor-pointer py-1 font-bold text-white">Experience</h4>
            </a>
            <a href="/#projects" class="nav-item relative z-10">
                <h4 class="px-2 cursor-pointer py-1 font-bold text-white">Projects</h4>
            </a>
        </nav>
        <button id="theme-toggle">
            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#fff">
                <path
                    d="M480-360q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Zm326-268Z" />
            </svg>
        </button>
    </div>
</header>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const links = document.querySelectorAll('.nav-item');
        const slider = document.getElementById('slider');

        function updateSliderPosition() {
            const activeLink = document.querySelector('.nav-item.active');
            if (activeLink) {
                const { left, width } = activeLink.getBoundingClientRect();
                const parentLeft = slider.parentElement.getBoundingClientRect().left;
                slider.style.left = `${left - parentLeft}px`;
                slider.style.width = `${width}px`;
            }
        }

        // Function to update text color for active/inactive links
        function updateTextColors() {
            links.forEach((link) => {
                const textElement = link.querySelector('h4');
                if (link.classList.contains('active')) {
                    textElement.classList.remove('text-white');
                    textElement.classList.add('text-black');
                } else {
                    textElement.classList.remove('text-black');
                    textElement.classList.add('text-white');
                }
            });
        }

        // Set active link and move slider on page load
        links.forEach((link) => {
            if (window.location.pathname === link.getAttribute('href')) {
                link.classList.add('active');
            }

            link.addEventListener('click', (e) => {
                links.forEach((l) => l.classList.remove('active'));
                link.classList.add('active');
                updateSliderPosition();
                updateTextColors();
            });
        });

        // Initial setup on page load
        updateSliderPosition();
        updateTextColors();

        // Update slider on window resize (optional for responsiveness)
        window.addEventListener('resize', updateSliderPosition);
    });
</script>